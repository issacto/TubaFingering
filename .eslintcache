[{"/Users/issac/Documents/GitHub/Newfingering/src/screens/difficultyScreen.js":"1","/Users/issac/Documents/GitHub/Newfingering/src/components/loader.js":"2","/Users/issac/Documents/GitHub/Newfingering/src/App.js":"3","/Users/issac/Documents/GitHub/Newfingering/src/components/navigationbar.js":"4","/Users/issac/Documents/GitHub/Newfingering/src/components/footer.js":"5","/Users/issac/Documents/GitHub/Newfingering/src/screens/gameScreen.js":"6","/Users/issac/Documents/GitHub/Newfingering/src/history.js":"7","/Users/issac/Documents/GitHub/Newfingering/src/screens/readyScreen.js":"8","/Users/issac/Documents/GitHub/Newfingering/src/index.js":"9","/Users/issac/Documents/GitHub/Newfingering/src/screens/resultScreen.js":"10","/Users/issac/Documents/GitHub/Newfingering/src/screens/timeScreen.js":"11","/Users/issac/Documents/GitHub/Newfingering/src/screens/homeScreen.js":"12","/Users/issac/Documents/GitHub/Newfingering/src/screens/documentationScreen.js":"13","/Users/issac/Documents/GitHub/Newfingering/src/components/notes.js":"14","/Users/issac/Documents/GitHub/Newfingering/src/screens/keyPage.js":"15","/Users/issac/Documents/GitHub/Newfingering/src/components/finishLoader.js":"16"},{"size":2945,"mtime":1612284810890,"results":"17","hashOfConfig":"18"},{"size":383,"mtime":1612357938977,"results":"19","hashOfConfig":"18"},{"size":1433,"mtime":1614714520835,"results":"20","hashOfConfig":"18"},{"size":759,"mtime":1612277948749,"results":"21","hashOfConfig":"18"},{"size":440,"mtime":1612292534230,"results":"22","hashOfConfig":"18"},{"size":8464,"mtime":1612391075736,"results":"23","hashOfConfig":"18"},{"size":87,"mtime":1611965350170,"results":"24","hashOfConfig":"18"},{"size":3662,"mtime":1612389763163,"results":"25","hashOfConfig":"18"},{"size":559,"mtime":1611965519377,"results":"26","hashOfConfig":"18"},{"size":4804,"mtime":1612284426231,"results":"27","hashOfConfig":"18"},{"size":2903,"mtime":1612284960901,"results":"28","hashOfConfig":"18"},{"size":3122,"mtime":1612564834419,"results":"29","hashOfConfig":"18"},{"size":2537,"mtime":1612389990280,"results":"30","hashOfConfig":"18"},{"size":4377,"mtime":1612388872957,"results":"31","hashOfConfig":"18"},{"size":3646,"mtime":1612293078979,"results":"32","hashOfConfig":"18"},{"size":420,"mtime":1612391500336,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"1roqs4k",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/issac/Documents/GitHub/Newfingering/src/screens/difficultyScreen.js",["80","81","82","83","84","85"],"import React, { Component } from \"react\";\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\n\n\nexport default class DifficultyPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {indicator :0 };\n        if(this.props.location.state==null){\n            this.props.history.push({ pathname: \"/questionPage\"});\n        }\n    }\n    nextPage=()=>{\n        this.props.history.push({ pathname: \"/questionPage\", state: [this.props.location.state,this.state.indicator]} );\n    }\n    realSetState=(quantity)=>{\n        this.setState({indicator: (this.state.indicator+quantity)%3})\n    }\n    mouseEntered1=()=>{\n        this.setState({indicator: 0})\n    }\n    mouseEntered2=()=>{\n        this.setState({indicator: 1})\n    }\n    mouseEntered3=()=>{\n        this.setState({indicator: 2})\n    }\n    render() {\n        return(\n            <div className = \"main\">\n                \n                \n                <KeyboardEventHandler\n                    handleKeys={['left','right','enter','space']}\n                    onKeyEvent={(key, e) =>{ \n                        console.log(key)\n                        switch(key){\n                            case 'left':\n                                 this.realSetState(-1)\n                                break;\n                            case 'right':\n                                this.realSetState(1)\n                                break;\n                            case 'enter':\n                                this.nextPage()\n                                break;\n                            case 'space':\n                                this.nextPage()\n                                break;\n                        }\n                    }} />\n\n                <table className=\"mainTable\">\n                    <tbody>\n                    <tr> \n                    <td className=\"maintableElement\" style={{border:this.state.indicator==0?\"solid 10px rgb(87, 87, 170)\":null, backgroundColor:\"darkturquoise\"}} onMouseEnter={this.mouseEntered1} onClick={this.nextPage}> Easy <p className=\"difficultyDescription\">(5seconds per question)</p></td>\n                    <td className=\"maintableElement\" style={{border:this.state.indicator==1 || this.state.indicator==-2?\"solid 10px rgb(87, 87, 170)\":null, backgroundColor:\"rgba(86, 88, 88, 0.596)\"}} onMouseEnter={this.mouseEntered2} onClick={this.nextPage}> Medium <p className=\"difficultyDescription\" style={{color:\"aliceblue\"}}>(2seconds per question)</p></td>\n                    <td className=\"maintableElement\" style={{border:this.state.indicator==2 || this.state.indicator==-1?\"solid 10px rgb(87, 87, 170)\":null, backgroundColor:\"crimson\"}} onMouseEnter={this.mouseEntered3} onClick={this.nextPage}> Hard <p className=\"difficultyDescription\">(1seconds per question)</p></td>\n                    </tr>\n                    </tbody>\n                 </table>\n\n\n            </div>\n        )\n    }\n\n\n\n}",["86","87"],"/Users/issac/Documents/GitHub/Newfingering/src/components/loader.js",[],"/Users/issac/Documents/GitHub/Newfingering/src/App.js",["88"],"/Users/issac/Documents/GitHub/Newfingering/src/components/navigationbar.js",[],["89","90"],"/Users/issac/Documents/GitHub/Newfingering/src/components/footer.js",[],"/Users/issac/Documents/GitHub/Newfingering/src/screens/gameScreen.js",["91","92","93","94","95","96","97","98","99","100"],"import React, { Component } from \"react\";\nimport {DifficultyToSeconds} from \"../components/hashMap\";\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport  {NotesArray,NotesDisplayMap,getMap} from \"../components/notes\";\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\nimport CorrectLogo from \"../Images/AnswerResponse/check.svg\";\nimport WrongBoardLogo from \"../Images/AnswerResponse/wrong.svg\";\nimport Loader from \"../components/loader\";\nimport FinishLoader from \"../components/finishLoader\"\n\nexport default class ReadyPage extends Component{\n    constructor(props) {\n        super(props);\n        this.state={\n            notesArray:[],\n            noOfQuestions:this.props.location.state[2],\n            seconds: DifficultyToSeconds.get(this.props.location.state[1]),\n            noteIndicator:0,\n            totalCorrectAnsEntered:0,\n            totalIncorrectAnsEntered:0,\n            output: 'Hello, I am a component that listens to keydown and keyup of a',\n            correctAnsEntered: false ,\n            ansEntered:false,\n            fullSeconds: DifficultyToSeconds.get(this.props.location.state[1]),\n            tempClickedNotes:[],\n            tempIsCorrect:false,\n            tubaChose:this.props.location.state[0],\n            tubaChosenMap: getMap(this.props.location.state[0]),\n            correctNotes:[],\n            incorrectNotes:[],\n            loading: true,\n            finished:false,\n\n        }\n        console.log(this.props.location.state[1])\n        //10questions\n        //const size = 10\n        \n        \n    }\n    sleep = (milliseconds) => {\n        return new Promise((resolve) => setTimeout(resolve, milliseconds));\n      };\n    wait = async (milliseconds = 2000) => {\n        await this.sleep(milliseconds);\n        for(var i =0;i<this.state.noOfQuestions;i++){\n            var randomIndex = Math.floor(Math.random() * (NotesArray.length-1));\n            this.state.notesArray.push(NotesArray[randomIndex])\n        }\n        this.setState({ loading: false})\n      };\n    componentDidMount() {\n        this.wait(2000);\n        //this.fetchGitHub();\n    }\n    nextPage =()=>{\n        this.props.history.push(\"/resultPage\",\n        //tubaChose, noOfQuestions, totalCorrectAnsEntered,totalIncorrectAnsEntered,correctNotes,incorrectNotes \n        [this.state.tubaChose,this.state.noOfQuestions,this.state.totalCorrectAnsEntered,\n        this.state.totalIncorrectAnsEntered,this.state.correctNotes,this.state.incorrectNotes\n        ]);\n    }\n    realSetIndicator =()=>{\n        if(this.state.tubaChosenMap.get(this.state.notesArray[this.state.noteIndicator]).length==0 && !this.state.ansEntered){\n            this.recordCorrectAnswer(this.state.notesArray[this.state.noteIndicator]);\n        }else if(!this.state.tempIsCorrect){\n            this.recordIncorrectAnswer(this.state.notesArray[this.state.noteIndicator]);\n        }\n        \n        setTimeout(()=>{ \n        this.setState({noteIndicator:this.state.noteIndicator+1});\n        this.setState({ansEntered: false })\n        this.setState({correctAnsEntered: false })\n        this.setState({tempIsCorrect:false})\n        },500)\n    }\n    renderTime = ({ remainingTime }) => {\n        if(this.state.correctAnsEntered){\n            //return <div className=\"timer\"><div className=\"value\">Yes</div></div>;\n            \n            return <div className=\"timer\"><img src={CorrectLogo} width=\"50%\"/></div>;\n\n        }\n        else if (remainingTime == 0 ) {\n                if(this.state.tubaChosenMap.get(this.state.notesArray[this.state.noteIndicator]).length==0 && !this.state.ansEntered){\n                   return <div className=\"timer\"><img src={CorrectLogo} width=\"50%\"/></div>;\n                }else{ \n                    return <div className=\"timer\"><div className=\"value\">Next Q..</div></div>;}\n              //return <div className=\"timer\"><img src={SkipLogo} width=\"50%\"/></div>;\n        }\n        else if (remainingTime> 0.1){\n        return (\n          <div className=\"timer\">\n            <div className=\"text\">Remaining</div>\n            <div className=\"value\">{remainingTime}</div>\n            <div className=\"text\">seconds</div>\n          </div>\n        );\n        }\n    };\n    addTempClickedNotes(x){\n        this.setState({ansEntered:true});\n        let { tempClickedNotes } = this.state;\n        tempClickedNotes.push(x)\n        console.log(tempClickedNotes,\",  NOtes\")\n        //Check Answer\n        setTimeout(()=>{ \n            var x =tempClickedNotes.sort();\n            var y =this.state.tubaChosenMap.get(this.state.notesArray[this.state.noteIndicator]).sort();\n        if(JSON.stringify(x)==JSON.stringify(y)){\n            this.setState({correctAnsEntered:true},\n            this.recordCorrectAnswer(this.state.notesArray[this.state.noteIndicator])\n            )\n        } }, 10);\n        setTimeout(function(){ tempClickedNotes.shift(); }, 20);\n    }\n    recordCorrectAnswer= note=>{\n        if(this.state.tempIsCorrect==false){\n            this.setState({totalCorrectAnsEntered: this.state.totalCorrectAnsEntered+1});\n            this.state.correctNotes.push(note);\n            this.setState({tempIsCorrect: true});\n        }\n        //correctAnswered+=1;\n\n    }\n    recordIncorrectAnswer=note=>{\n        this.state.incorrectNotes.push(note)\n        this.setState({totalIncorrectAnsEntered: this.state.totalIncorrectAnsEntered+1});\n        //incorrectAnswered+=1\n    }\n    setFinish =isFinished=>{\n        this.setState({finished:isFinished})\n    }\n\n    render() {\n        if (this.state.loading) return <Loader />;\n        if (this.state.finished) return <FinishLoader />;\n\n        return(\n            \n            <div className = \"main\">\n                <KeyboardEventHandler\n                    handleKeys={['u','i','o','p','space']}\n                    onKeyEvent={(key, e) =>{ \n                        console.log(key);\n                        this.addTempClickedNotes(key);\n                    }} />\n\n\n                    <div className=\"leftGameContainer\">\n                    <img src={WrongBoardLogo} width=\"24%\"/>\n                    <p className=\"displayScore\">{this.state.totalIncorrectAnsEntered}</p>\n                    </div>\n                \n                    <div className=\"middleGameContainer\" style={{marginBottom:\"11vh\"}}>\n                        <div style={{marginBottom:\"4vh\"}}>\n                    <p style={{fontSize:\"5vh\",display:\"inline\"}}>{this.state.noteIndicator+1}. {this.state.notesArray[this.state.noteIndicator]\n                    } </p> <p style={{fontSize:\"2vh\", display:\"inline\"}}>({NotesDisplayMap.get(this.state.notesArray[this.state.noteIndicator])})</p>\n                    </div>\n                    \n                    <div className=\"timer-wrapper\">\n\n                    \n                    <CountdownCircleTimer\n                        isPlaying\n                        duration={this.state.fullSeconds}\n                        size=\"350\"\n                        strokeWidth=\"18\"\n                        onComplete={() => {\n\n                            this.realSetIndicator();\n\n                            if(this.state.noteIndicator==this.state.noOfQuestions-1){\n                                setTimeout(()=>{ \n                                    this.setFinish(true);\n                                    setTimeout(()=>{ this.setFinish(false);this.nextPage(); },3000);\n                                },300)\n                                \n                            }\n                            console.log(\"finished\") // repeat animation in 1.5 seconds\n                            return [true, 500]\n                        }}\n                        colors={[[\"#004777\", 0.33], [\"#383a96\", 0.33], [\"#A30000\"]]}\n                    >\n\n                    {this.renderTime}\n                   \n                </CountdownCircleTimer>\n                \n                </div>\n                </div>\n                <div className=\"rightGameContainer\">\n                <img src={CorrectLogo} width=\"24%\" style={{borderRadius:\"50%\"}}/>\n                    <p className=\"displayScore\">{this.state.totalCorrectAnsEntered}</p>\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\n/*\n{this.state.notesArray\n                }\n                {this.state.seconds}\n*/\n//{//<li><h2 style={{color:\"white\"}}>{difficultyMapping.get(this.props.location.state[1])} Questions</h2></li>}\n//{({ remainingTime }) =><p style={{fontSize:\"12vh\"}}>{remainingTime}</p> }","/Users/issac/Documents/GitHub/Newfingering/src/history.js",[],["101","102"],"/Users/issac/Documents/GitHub/Newfingering/src/screens/readyScreen.js",["103"],"import React, { Component } from \"react\";\nimport {keyMapping, difficultyMapping} from \"../components/hashMap\"\nimport { Link } from \"react-router-dom\";\nimport { AwesomeButtonProgress } from 'react-awesome-button';\nimport AwesomeButtonStyles from 'react-awesome-button/src/styles/styles.scss'\nimport styles from 'react-awesome-button/src/styles/themes/theme-bojack';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport  { ReactComponent as ChooseLogo } from \"../Images/ReadyPage/choose.svg\";\nimport  { ReactComponent as InstructionsLogo } from \"../Images/ReadyPage/instructions.svg\";\n\n\nexport default class ReadyPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            prevState:[keyMapping.get(this.props.location.state[0]),difficultyMapping.get(this.props.location.state[1]),this.props.location.state[2]]\n        }\n        \n    }\n    nextPage=()=>{\n        this.props.history.push({ pathname: \"/gamePage\", state: this.state.prevState});\n    }\n\n    render() {\n        \n        \n        return(\n            <div className = \"main\">\n                <KeyboardEventHandler\n                    handleKeys={['enter','space']}\n                    onKeyEvent={(key, e) =>{ \n                        this.nextPage();\n                    }} />\n\n                <div className=\"leftContainerForReady\">\n                    <h1 style={{display:\"inline\"}}>Instructions {\" \"}</h1><InstructionsLogo fill=\"white\" stroke=\"rgb(87, 87, 170)\" height=\"11%\" width=\"11%\" style={{display:\"inline\"}}/> \n                    <br/><br/>\n                    <div style={{textAlign:\"left\",width:\"100%\"}}>\n                    <ul>\n                    <li><h2 style={{color:\"white\"}}>Press U, I, O, P, /space/ for the first, second, third, fourth and fifth valve respectively</h2></li>\n                    <li><h2 style={{color:\"white\"}}>Do not click anything if no valve is needed eg Bb for Bbtuba</h2></li>\n                    <li><h2 style={{color:\"white\"}}>Range from f1 (Low F) to F3 (High F)</h2></li>\n                    <li>\n                    <Link to=\"/documentationPage\" className=\"col s5 brand-logo center black-text\">\n                        <h2 style={{color:\"white\"}}>Full Documentation </h2>\n                    </Link>\n                    </li>\n                    \n                    </ul>\n                    </div>\n                </div>\n                <div className=\"middleContainerForReady\">\n                    <h1 style={{display:\"inline\"}}> Chosen {\" \"}</h1> <ChooseLogo fill=\"white\" stroke=\"rgb(87, 87, 170)\"  height=\"11%\" width=\"11%\" style={{display:\"inline\"}}/> \n                    <br/><br/>\n                    <div style={{textAlign:\"left\",width:\"100%\"}}>\n                    <ul>\n                    <li><h2 style={{color:\"white\"}}>{this.state.prevState[0]} Tuba</h2></li>\n                    <li><h2 style={{color:\"white\"}}>{this.state.prevState[2]} {this.state.prevState[1]} Questions</h2></li>\n                    \n                    </ul>\n                    </div>\n                </div>\n                <div className=\"rightContainerForReady\">\n                <AwesomeButtonProgress\n                    cssModule={AwesomeButtonStyles}\n                    type=\"primary\"\n                    cssModule={styles}\n                    onPress={next => {\n                    this.nextPage();\n                    }}\n                >\n                    Start\n                </AwesomeButtonProgress>\n                </div>\n                \n            </div>\n        )\n    }\n\n\n\n}\n\n//{//<li><h2 style={{color:\"white\"}}>{difficultyMapping.get(this.props.location.state[1])} Questions</h2></li>}","/Users/issac/Documents/GitHub/Newfingering/src/index.js",["104","105"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/issac/Documents/GitHub/Newfingering/src/screens/resultScreen.js",["106","107","108","109","110","111"],"import React, { Component } from \"react\";\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport ReactStoreIndicator from 'react-score-indicator'\nimport  {NotesArray,getMap} from \"../components/notes\";\n\n\n\nexport default class ResultPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            indicator: 0 ,\n            //tubaChose, noOfQuestions, totalCorrectAnsEntered,totalIncorrectAnsEntered,correctNotes,incorrectNotes\n            tubaChose: this.props.location.state[0],\n            noOfQuestions: this.props.location.state[1],\n            totalCorrectAnsEntered: this.props.location.state[2],\n            totalIncorrectAnsEntered: this.props.location.state[3],\n            correctNotes: this.props.location.state[4],\n            incorrectNotes: this.props.location.state[5],\n            incorrectCorrectAnswers: []\n        }\n        this.loopOverIncorrect();\n    }\n    backLandingPage=()=>{\n        this.props.history.push({ pathname: \"/\"});\n    }\n    backKeyPage=()=>{\n        this.props.history.push({ pathname: \"/keyPage\"});\n    }\n    changeButton=()=>{\n        if(this.state.indicator==0) this.setState({indicator:1})\n        else this.setState({indicator:0})\n    }\n    mouseEntered1=()=>{\n        this.setState({indicator: 0})\n    }\n    mouseEntered2=()=>{\n        this.setState({indicator: 1})\n    }\n    nextPage=()=>{\n        if(this.state.indicator==0){\n            this.props.history.push({ pathname: \"/\"} );\n        \n        }else{\n        this.props.history.push({ pathname: \"/keyPage\"} );\n        }\n    }\n    loopOverIncorrect=()=>{\n        const map =getMap(this.state.tubaChose);\n        var answer =\"\"\n        for(var x of this.state.incorrectNotes){\n            this.state.incorrectCorrectAnswers.push({\n                note: x,\n                fingering: map.get(x)\n            });\n        }\n        return answer;\n    }\n    render() {\n        return(\n            <div className = \"resultMainPart\">\n                <KeyboardEventHandler\n                    handleKeys={['left','right','enter','space']}\n                    onKeyEvent={(key, e) =>{ \n                        switch(key){\n                            case 'left':\n                                this.changeButton()\n                                break;\n                            case 'right':\n                                this.changeButton()\n                                break;\n                            case 'space':\n                                this.nextPage()\n                                break;\n                            case 'enter':\n                                this.nextPage()\n                                break;\n                        }\n                    }} />\n                    <div className=\"leftGameContainer\" style={{alignItems:\"center\",width:\"55%\"}}> \n                    <table className=\"resultTable\">\n                    <tr style={{marginBottom:\"1.4vh\"}}>\n                        <th>Incorrect Notes</th>\n                        <th>Correct Fingering</th>\n                    </tr>\n                    <tbody >\n                    {\n                        this.state.incorrectCorrectAnswers.map((incorrectNotes, index) => (\n                            <tr><td> {incorrectNotes.note}</td> <td> {incorrectNotes.fingering} </td></tr>\n                        ))\n\n                    }\n                    </tbody>\n                    </table>\n                    </div>\n                    <div className=\"middleGameContainer\" style={{width:\"55%\"}}>\n                    <ReactStoreIndicator\n                   \n                    value={this.state.totalCorrectAnsEntered}\n                    maxValue={this.state.noOfQuestions}\n                    lineWidth={20}\n                    width={300}\n                    fadedOpacity={20}\n                    colors={[\n                        \"#d12000\",\n                        \"#ed8d00\",\n                        \"#f1bc00\",\n                        \"#84c42b\",\n                        \"#53b83a\",\n                        \"#3da940\",\n                        \"black\",\n                        \"black\"\n                      ]}\n\n                    />\n                    </div>\n                    <div className=\"rightGameContainer\" style={{width:\"55%\"}}>\n\n                    <button className=\"resultButton\" style={{border:this.state.indicator==0 ?\"solid 5px white\":\"solid 5px rgb(87, 87, 170)\"}} onMouseEnter={this.mouseEntered1} onClick={this.nextPage}> HomePage</button>\n                    <button className=\"resultButton\" style={{border:this.state.indicator==1 ?\"solid 5px  white \":\"solid 5px rgb(87, 87, 170)\"}} onMouseEnter={this.mouseEntered1} onClick={this.nextPage}> Play Again</button>\n \n                    </div>\n\n\n\n            </div>\n        )\n    }\n\n\n\n}",["112","113"],"/Users/issac/Documents/GitHub/Newfingering/src/screens/timeScreen.js",["114","115","116","117","118","119"],"import React, { Component } from \"react\";\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport {TimeMapping} from \"../components/hashMap\";\n\nexport default class QuestionPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            indicator :0,\n         };\n    }\n    nextPage=()=>{\n        this.props.history.push({ pathname: \"/readyPage\", state: [this.props.location.state[0],this.props.location.state[1],TimeMapping.get(this.state.indicator)]} );\n    }\n    realSetState=(quantity)=>{\n        this.setState({indicator: (this.state.indicator+quantity)%3})\n    }\n    mouseEntered1=()=>{\n        this.setState({indicator: 0})\n    }\n    mouseEntered2=()=>{\n        this.setState({indicator: 1})\n    }\n    mouseEntered3=()=>{\n        this.setState({indicator: 2})\n    }\n    render() {\n        return(\n            <div className = \"main\">\n                \n                \n                <KeyboardEventHandler\n                    handleKeys={['left','right','enter','space']}\n                    onKeyEvent={(key, e) =>{ \n                        console.log(key)\n                        switch(key){\n                            case 'left':\n                                 this.realSetState(-1)\n                                break;\n                            case 'right':\n                                this.realSetState(1)\n                                break;\n                            case 'enter':\n                                this.nextPage()\n                                break;\n                            case 'space':\n                                this.nextPage()\n                                break;\n                        }\n                    }} />\n\n                <table className=\"mainTable\">\n                    <tbody>\n                    <tr> \n                    <td className=\"maintableElement\" style={{border:this.state.indicator==0?\"solid 10px rgb(87, 87, 170)\":null, backgroundColor:\"darkturquoise\"}} onMouseEnter={this.mouseEntered1} onClick={this.nextPage}> 10 <p className=\"difficultyDescription\">(10 questions)</p></td>\n                    <td className=\"maintableElement\" style={{border:this.state.indicator==1 || this.state.indicator==-2?\"solid 10px rgb(87, 87, 170)\":null, backgroundColor:\"rgba(86, 88, 88, 0.596)\"}} onMouseEnter={this.mouseEntered2} onClick={this.nextPage}> 20 <p className=\"difficultyDescription\" style={{color:\"aliceblue\"}}>(20 questions)</p></td>\n                    <td className=\"maintableElement\" style={{border:this.state.indicator==2 || this.state.indicator==-1?\"solid 10px rgb(87, 87, 170)\":null, backgroundColor:\"crimson\"}} onMouseEnter={this.mouseEntered3} onClick={this.nextPage}> 25  <p className=\"difficultyDescription\">(25 questions)</p></td>\n                    </tr>\n                    </tbody>\n                 </table>\n\n\n            </div>\n        )\n    }\n}","/Users/issac/Documents/GitHub/Newfingering/src/screens/homeScreen.js",["120","121","122","123","124","125","126"],"import React, { Component } from \"react\";\nimport \"../stylesheet.css\"\nimport  { ReactComponent as Logo }from \"../Images/tube.svg\";\nimport history from '../history';\nimport BbLogo from \"../Images/KeysLogos/BbLogo.png\"\nimport CLogo from \"../Images/KeysLogos/CLogo.png\"\nimport EbLogo from \"../Images/KeysLogos/EbLogo.png\"\nimport FLogo from \"../Images/KeysLogos/FLogo.png\"\nimport { AwesomeButton } from \"react-awesome-button\";\nimport AwesomeButtonStyles from \"react-awesome-button/src/styles/styles.scss\";\nimport styles from 'react-awesome-button/src/styles/themes/theme-indigo';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\n\nexport default class HomePage extends Component {\n    constructor(props) {\n        super(props);\n    }\n    nextPage=()=>{\n      this.props.history.push(\"/keyPage\");\n    }\n    render() {\n        return(\n                <div class=\"landPageBody\"> \n                 <KeyboardEventHandler\n                    handleKeys={['enter','space']}\n                    onKeyEvent={(key, e) =>{ \n                        this.nextPage();\n                    }} />\n\n                    \n                    <div className=\"leftContainer\">\n                        <Logo fill=\"white\" stroke=\"rgb(87, 87, 170)\" />\n                    </div>\n\n                    <div className= \"middleContainer\"> \n                           <h1 className=\"landPageHeader\">The first tuba fingering practicing website.</h1>\n                           <h2 className=\"landPageHeader\">\n                            <br/>Choose your tuba's key, valves and difficulty\n                        </h2> \n                    </div>\n                    <div className= \"rightContainer\">\n                        <div className=\"upperContainer\">\n                            <img src={BbLogo} width=\"17%\"/>\n                            <img src={CLogo} width=\"17%\"/>\n                            <img src={EbLogo} width=\"17%\"/>\n                            <img src={FLogo} width=\"17%\"/>\n                        </div>\n                        <div className=\"lowerContainer\">\n                        <p className=\"landPageHeader\" style={{fontSize:\"6vh\"}}>Practice now </p>\n                        <AwesomeButton\n                            cssModule={AwesomeButtonStyles}\n                            type=\"primary\"\n                            cssModule={styles}\n                            size= \"large\"\n                            ripple\n                            onPress={() => {\n                                this.nextPage()\n                            }}\n                            >\n                           <p style={{fontSize:\"3vh\"}}>Start </p>\n                        </AwesomeButton>\n\n                        <p style={{marginTop:\"4vh\", fontSize:\"2vh\",color:\"grey\"}}>{\"<\"}, {\">\"} , {\"<\"}space{\">\"}, {\"<\"}enter{\">\"} enabled</p>\n                        {/*<button className=\"startButton\" onClick={this.nextPage}>\n                        Start Game\n                        </button>*/}\n                        </div>\n                    </div>\n                   \n                </div>\n                \n        )\n    }\n\n\n\n}","/Users/issac/Documents/GitHub/Newfingering/src/screens/documentationScreen.js",["127"],"import React, { Component } from \"react\";\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport  {NotesArray,NotesDisplayMap,getMap} from \"../components/notes\";\n\n\nexport default class DocumentationPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            indicator :0 ,\n            Bb3Map:getMap(\"Bb (3 values)\"),\n            Bb4Map:getMap(\"Bb (4 values)\"),\n            CMap:getMap(\"C (5 values)\"),\n            EbMap:getMap(\"Eb (4 values)\"),\n            FMap:getMap(\"F (5 values)\"),\n        };\n    }\n    nextPage=()=>{\n        this.props.history.push({ pathname: \"/questionPage\", state: [this.props.location.state,this.state.indicator]} );\n    }\n    render() {\n        return(\n            <div className = \"main\">\n\n                    <table className=\"documentationTable\" style={{justifyContent:\"center\",width:\"auto\", borderSpacing:\"1.5vh\"}}>\n                    <tr style={{marginBottom:\"2vh\"}}>\n                        <th style={{ fontSize:\"4vh\", }}> Notes</th>\n                        <th style={{ fontSize:\"4vh\", color:\"darkgoldenrod\"}}>Bb 3 Valves</th>\n                        <th style={{ fontSize:\"4vh\", color:\"rgb(141, 121, 8)\"}}>Bb 4 Valves</th>\n                        <th style={{ fontSize:\"4vh\", color:\"rgba(86, 88, 88, 0.596)\"}}>C 5 Valves</th>\n                        <th style={{ fontSize:\"4vh\", color:\"rgb(19, 53, 82)\"}}>Eb 4 Valves</th>\n                        <th style={{ fontSize:\"4vh\", color:\"rgb(23, 75, 64)\"}}>F 5 Valves</th>\n                    </tr>\n                    <tbody >\n                    {\n                        NotesArray.map((note, index) => (\n                            <tr\n                            >\n                            <td> {NotesDisplayMap.get(note)}</td> \n                            <td style={{ backgroundColor:\"darkgoldenrod\"}}> {this.state.Bb3Map.get(note)}</td> \n                            <td style={{ backgroundColor:\"rgb(141, 121, 8)\"}}> {this.state.Bb4Map.get(note)}</td> \n                            <td style={{ backgroundColor:\"rgba(86, 88, 88, 0.596)\"}}> {this.state.CMap.get(note)}</td> \n                            <td style={{ backgroundColor:\"rgb(19, 53, 82)\"}}> {this.state.EbMap.get(note)}</td> \n                            <td style={{ backgroundColor:\"rgb(23, 75, 64)\"}}> {this.state.FMap.get(note)}</td> \n                            </tr>\n                        ))\n\n                    }\n                    </tbody>\n                    </table>\n\n\n            </div>\n        )\n    }\n\n\n\n}",["128","129"],"/Users/issac/Documents/GitHub/Newfingering/src/components/notes.js",["130"],"/Users/issac/Documents/GitHub/Newfingering/src/screens/keyPage.js",["131","132","133","134","135","136","137","138","139","140"],"import React, { Component } from \"react\";\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\n\n\nexport default class KeyPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {indicator :0 };\n    }\n    nextPage=()=>{\n        this.props.history.push({ pathname: \"/difficultyPage\", state: this.state.indicator} );\n    }\n    realSetState=(quantity)=>{\n        console.log(quantity)\n        this.setState({indicator: (this.state.indicator+quantity)%5})\n    }\n    mouseEntered1=()=>{\n        this.setState({indicator: 0})\n    }\n    mouseEntered2=()=>{\n        this.setState({indicator: 1})\n    }\n    mouseEntered3=()=>{\n        this.setState({indicator: 2})\n    }\n    mouseEntered4=()=>{\n        this.setState({indicator: 3})\n    }\n    mouseEntered5=()=>{\n        this.setState({indicator: 4})\n    }\n    render() {\n        return(\n            <div className = \"main\" style={{alignItems:\"center\"}}>\n                \n                <KeyboardEventHandler\n                    handleKeys={['left','right','enter','space']}\n                    onKeyEvent={(key, e) =>{ \n                        console.log(key)\n                        switch(key){\n                            case 'left':\n                                 this.realSetState(-1)\n                                break;\n                            case 'right':\n                                this.realSetState(1)\n                                break;\n                            case 'space':\n                                this.nextPage()\n                                break;\n                            case 'enter':\n                                this.nextPage()\n                                break;\n                        }\n                    }} />\n\n                <table className=\"mainTable\" >\n                    <tbody>\n                    <tr> \n                    <td className=\"maintableElementKeys\" style={{border:this.state.indicator==0 ?\"solid 10px rgb(87, 87, 170)\":null, backgroundColor:\"darkgoldenrod\"}} onMouseEnter={this.mouseEntered1} onClick={this.nextPage}> Bb <p className=\"smallDescription\">(3valves)</p></td>\n                    <td className=\"maintableElementKeys\" style={{border:this.state.indicator==1 ||  this.state.indicator==-4 ? \"solid 10px rgb(87, 87, 170)\":null, backgroundColor:\"rgb(141, 121, 8)\"}} onMouseEnter={this.mouseEntered2} onClick={this.nextPage}> Bb <p className=\"smallDescription\">(4valves)</p></td>\n                    <td className=\"maintableElementKeys\" style={{border:this.state.indicator==2 || this.state.indicator==-3?\"solid 10px rgb(87, 87, 170)\":null, backgroundColor:\"rgba(86, 88, 88, 0.596)\"}} onMouseEnter={this.mouseEntered3} onClick={this.nextPage}> C <p className=\"smallDescription\">(5valves)</p></td>\n                    <td className=\"maintableElementKeys\" style={{border:this.state.indicator==3 || this.state.indicator==-2?\"solid 10px rgb(87, 87, 170)\":null, backgroundColor:\"rgb(19, 53, 82)\"}} onMouseEnter={this.mouseEntered4} onClick={this.nextPage}> Eb <p className=\"smallDescription\">(4valves)</p></td>\n                    <td className=\"maintableElementKeys\" style={{border:this.state.indicator==4 || this.state.indicator==-1?\"solid 10px rgb(87, 87, 170)\":null, backgroundColor:\"rgb(23, 75, 64)\"}} onMouseEnter={this.mouseEntered5} onClick={this.nextPage}> F <p className=\"smallDescription\">(5valves)</p></td>\n                    </tr>\n                    </tbody>\n                 </table>\n\n                {/*<button className=\"startButton\" onClick={this.nextPage}>\n                    Start Game\n        </button>*/}\n\n            </div>\n        )\n    }\n\n\n\n}","/Users/issac/Documents/GitHub/Newfingering/src/components/finishLoader.js",[],{"ruleId":"141","severity":1,"message":"142","line":37,"column":25,"nodeType":"143","messageId":"144","endLine":50,"endColumn":26},{"ruleId":"145","severity":1,"message":"146","line":56,"column":89,"nodeType":"147","messageId":"148","endLine":56,"endColumn":91},{"ruleId":"145","severity":1,"message":"146","line":57,"column":89,"nodeType":"147","messageId":"148","endLine":57,"endColumn":91},{"ruleId":"145","severity":1,"message":"146","line":57,"column":116,"nodeType":"147","messageId":"148","endLine":57,"endColumn":118},{"ruleId":"145","severity":1,"message":"146","line":58,"column":89,"nodeType":"147","messageId":"148","endLine":58,"endColumn":91},{"ruleId":"145","severity":1,"message":"146","line":58,"column":116,"nodeType":"147","messageId":"148","endLine":58,"endColumn":118},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":1,"column":8,"nodeType":"155","messageId":"156","endLine":1,"endColumn":12},{"ruleId":"149","replacedBy":"157"},{"ruleId":"151","replacedBy":"158"},{"ruleId":"145","severity":1,"message":"146","line":64,"column":96,"nodeType":"147","messageId":"148","endLine":64,"endColumn":98},{"ruleId":"159","severity":1,"message":"160","line":81,"column":43,"nodeType":"161","endLine":81,"endColumn":79},{"ruleId":"145","severity":1,"message":"146","line":84,"column":32,"nodeType":"147","messageId":"148","endLine":84,"endColumn":34},{"ruleId":"145","severity":1,"message":"146","line":85,"column":104,"nodeType":"147","messageId":"148","endLine":85,"endColumn":106},{"ruleId":"159","severity":1,"message":"160","line":86,"column":50,"nodeType":"161","endLine":86,"endColumn":86},{"ruleId":"145","severity":1,"message":"146","line":110,"column":29,"nodeType":"147","messageId":"148","endLine":110,"endColumn":31},{"ruleId":"145","severity":1,"message":"146","line":118,"column":36,"nodeType":"147","messageId":"148","endLine":118,"endColumn":38},{"ruleId":"159","severity":1,"message":"160","line":151,"column":21,"nodeType":"161","endLine":151,"endColumn":60},{"ruleId":"145","severity":1,"message":"146","line":173,"column":56,"nodeType":"147","messageId":"148","endLine":173,"endColumn":58},{"ruleId":"159","severity":1,"message":"160","line":193,"column":17,"nodeType":"161","endLine":193,"endColumn":82},{"ruleId":"149","replacedBy":"162"},{"ruleId":"151","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":67,"column":21,"nodeType":"166","endLine":67,"endColumn":39},{"ruleId":"153","severity":1,"message":"167","line":6,"column":25,"nodeType":"155","messageId":"156","endLine":6,"endColumn":30},{"ruleId":"153","severity":1,"message":"168","line":6,"column":32,"nodeType":"155","messageId":"156","endLine":6,"endColumn":38},{"ruleId":"153","severity":1,"message":"169","line":4,"column":10,"nodeType":"155","messageId":"156","endLine":4,"endColumn":20},{"ruleId":"145","severity":1,"message":"146","line":31,"column":32,"nodeType":"147","messageId":"148","endLine":31,"endColumn":34},{"ruleId":"145","severity":1,"message":"146","line":41,"column":32,"nodeType":"147","messageId":"148","endLine":41,"endColumn":34},{"ruleId":"141","severity":1,"message":"142","line":65,"column":25,"nodeType":"143","messageId":"144","endLine":78,"endColumn":26},{"ruleId":"145","severity":1,"message":"146","line":119,"column":89,"nodeType":"147","messageId":"148","endLine":119,"endColumn":91},{"ruleId":"145","severity":1,"message":"146","line":120,"column":89,"nodeType":"147","messageId":"148","endLine":120,"endColumn":91},{"ruleId":"149","replacedBy":"170"},{"ruleId":"151","replacedBy":"171"},{"ruleId":"141","severity":1,"message":"142","line":36,"column":25,"nodeType":"143","messageId":"144","endLine":49,"endColumn":26},{"ruleId":"145","severity":1,"message":"146","line":55,"column":89,"nodeType":"147","messageId":"148","endLine":55,"endColumn":91},{"ruleId":"145","severity":1,"message":"146","line":56,"column":89,"nodeType":"147","messageId":"148","endLine":56,"endColumn":91},{"ruleId":"145","severity":1,"message":"146","line":56,"column":116,"nodeType":"147","messageId":"148","endLine":56,"endColumn":118},{"ruleId":"145","severity":1,"message":"146","line":57,"column":89,"nodeType":"147","messageId":"148","endLine":57,"endColumn":91},{"ruleId":"145","severity":1,"message":"146","line":57,"column":116,"nodeType":"147","messageId":"148","endLine":57,"endColumn":118},{"ruleId":"153","severity":1,"message":"172","line":4,"column":8,"nodeType":"155","messageId":"156","endLine":4,"endColumn":15},{"ruleId":"173","severity":1,"message":"174","line":15,"column":5,"nodeType":"175","messageId":"176","endLine":17,"endColumn":6},{"ruleId":"159","severity":1,"message":"160","line":43,"column":29,"nodeType":"161","endLine":43,"endColumn":60},{"ruleId":"159","severity":1,"message":"160","line":44,"column":29,"nodeType":"161","endLine":44,"endColumn":59},{"ruleId":"159","severity":1,"message":"160","line":45,"column":29,"nodeType":"161","endLine":45,"endColumn":60},{"ruleId":"159","severity":1,"message":"160","line":46,"column":29,"nodeType":"161","endLine":46,"endColumn":59},{"ruleId":"164","severity":1,"message":"165","line":53,"column":29,"nodeType":"166","endLine":53,"endColumn":47},{"ruleId":"153","severity":1,"message":"177","line":2,"column":8,"nodeType":"155","messageId":"156","endLine":2,"endColumn":28},{"ruleId":"149","replacedBy":"178"},{"ruleId":"151","replacedBy":"179"},{"ruleId":"141","severity":1,"message":"142","line":182,"column":5,"nodeType":"143","messageId":"144","endLine":193,"endColumn":6},{"ruleId":"141","severity":1,"message":"142","line":40,"column":25,"nodeType":"143","messageId":"144","endLine":53,"endColumn":26},{"ruleId":"145","severity":1,"message":"146","line":59,"column":93,"nodeType":"147","messageId":"148","endLine":59,"endColumn":95},{"ruleId":"145","severity":1,"message":"146","line":60,"column":93,"nodeType":"147","messageId":"148","endLine":60,"endColumn":95},{"ruleId":"145","severity":1,"message":"146","line":60,"column":121,"nodeType":"147","messageId":"148","endLine":60,"endColumn":123},{"ruleId":"145","severity":1,"message":"146","line":61,"column":93,"nodeType":"147","messageId":"148","endLine":61,"endColumn":95},{"ruleId":"145","severity":1,"message":"146","line":61,"column":120,"nodeType":"147","messageId":"148","endLine":61,"endColumn":122},{"ruleId":"145","severity":1,"message":"146","line":62,"column":93,"nodeType":"147","messageId":"148","endLine":62,"endColumn":95},{"ruleId":"145","severity":1,"message":"146","line":62,"column":120,"nodeType":"147","messageId":"148","endLine":62,"endColumn":122},{"ruleId":"145","severity":1,"message":"146","line":63,"column":93,"nodeType":"147","messageId":"148","endLine":63,"endColumn":95},{"ruleId":"145","severity":1,"message":"146","line":63,"column":120,"nodeType":"147","messageId":"148","endLine":63,"endColumn":122},"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["180"],"no-negated-in-lhs",["181"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar",["180"],["181"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["180"],["181"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Route' is defined but never used.","'Switch' is defined but never used.","'NotesArray' is defined but never used.",["180"],["181"],"'history' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'KeyboardEventHandler' is defined but never used.",["180"],["181"],"no-global-assign","no-unsafe-negation"]